class Main {
    static int findpivotwithdup(int[] arr){
        int start=0;
        int end=arr.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(mid<arr.length-1 && arr[mid]>arr[mid+1]){
                return mid;
            }
            if(mid>start && arr[mid]<arr[mid-1]){
                return mid-1;
            }
            if(arr[start]==arr[mid]&&arr[mid]==arr[end]){
                if(arr[start]>arr[start+1]){
                    return start;
                }
                start++;
                if(arr[end]<arr[end-1]){
                    return end-1;
                }
                end--;
            }
            else if(arr[start]<arr[mid]||(arr[start]==arr[mid]&&arr[mid]>arr[end])){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return -1;
    }
    static int search(int[] arr,int target){
        int start=0;
        int end=arr.length-1;
        int pivot=findpivotwithdup(arr);
        if (pivot == -1)
            // array is not rotated
            return bs(arr, target, start, end);
        if(arr[pivot]==target){
            return pivot;
        }
        if(target>=arr[start]){
            return bs(arr,target,start,pivot-1);
        }
        else{
            return bs(arr,target,pivot+1,end);
        }
    }
    static int bs(int [] arr,int target,int start,int end){
        while(start<=end){
            int mid=start+(end-start)/2;
            if(target>arr[mid]){
                start=mid+1;
            }
            else if(target<arr[mid]){
                end=mid-1;
            }
            else{
                return mid;
            }
        }
        return -1;
    }
    public static void main(String[] args) {
        int[] arr={15,16,11,12,13};
        int target=12;
        System.out.println(search(arr,target));
    }
}
